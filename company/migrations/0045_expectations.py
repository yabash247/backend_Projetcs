# Generated by Django 5.1.3 on 2025-01-07 13:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0044_alter_task_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expectations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(help_text='Name of the app.', max_length=100)),
                ('model_name', models.CharField(help_text='Name of the model.', max_length=100)),
                ('model_rowName', models.CharField(help_text='Name of the Col in the model.', max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', help_text='Status of the expectation.', max_length=10)),
                ('quantity', models.FloatField(help_text='Quantity associated with the expectation.')),
                ('uom', models.CharField(choices=[('kg', 'Kilograms'), ('g', 'Grams'), ('pcs', 'Pieces'), ('l', 'Liters')], default='pcs', help_text='Unit of Measurement (UOM).', max_length=10)),
                ('poor', models.FloatField(help_text='Value for poor performance.')),
                ('unsatisfactory', models.FloatField(help_text='Value for unsatisfactory performance.')),
                ('satisfactory', models.FloatField(help_text='Value for satisfactory performance.')),
                ('exceeds_expectation', models.FloatField(help_text='Value for exceeding expectations.')),
                ('outstanding', models.FloatField(help_text='Value for outstanding performance.')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='The date when the expectation was created.')),
                ('branch', models.ForeignKey(help_text='The branch associated with the expectation.', on_delete=django.db.models.deletion.CASCADE, related_name='expectations', to='company.branch')),
                ('company', models.ForeignKey(help_text='The company associated with the expectation.', on_delete=django.db.models.deletion.CASCADE, related_name='expectations', to='company.company')),
                ('created_by', models.ForeignKey(help_text='User who created the expectation.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_expectations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expectation',
                'verbose_name_plural': 'Expectations',
                'unique_together': {('company', 'branch', 'app_name', 'model_name', 'model_rowName')},
            },
        ),
    ]
